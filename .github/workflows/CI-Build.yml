name: Auto-Build
on:
  workflow_dispatch:
  push:
    branches: [ "**" ]

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  target-version: "net8.0"
  compile-flags: "--self-contained=true -c Release -p:UseAppHost=true -p:IncludeNativeLibrariesForSelfExtract=true -p:EnableCompressionInSingleFile=true -p:DebugType=None -p:DebugSymbols=false -p:PublishSingleFile=true"
jobs:

  build_Test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Test
      run: dotnet build wonderlab/wonderlab.csproj

  build_Windows:

    runs-on: windows-latest
    needs: build_Test
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build
      run: dotnet build wonderlab/wonderlab.csproj -t:CreateZip --arch x64 --os win ${{ env.compile-flags }}
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Windows
        path: wonderlab\bin\Release\${{env.target-version}}\win-x64\*.zip

  build_Linux:
    runs-on: ubuntu-latest
    needs: build_Test
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install pupnet
      run: dotnet tool install -g KuiperZone.PupNet
    - name: Install Linrary
      run: |
          sudo add-apt-repository universe
          sudo apt install libfuse2
    - name: Get version
      id: package_version
      uses: Blessing-Studio/get-csproj-version@main
      with:
        file: wonderlab/wonderlab.csproj
    - name: Build
      run: pupnet --runtime linux-x64 --kind appimage -y -o wonderlab-${{ steps.package_version.outputs.version }}-linux-x64.AppImage
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: AppImage
        path: Deploy/OUT/*.AppImage
  
  Release:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      GITHUB_REF: $ github.ref
    needs: [build_Windows, build_Linux]
    steps:
    - uses: nelonoel/branch-name@v1
    
    - name: Download Windows Build
      uses: actions/download-artifact@v3
      with:
       name: Windows

    - name: Download AppImage Build
      uses: actions/download-artifact@v3
      with:
       name: AppImage

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get version
      id: package_version
      uses: Blessing-Studio/get-csproj-version@main
      with:
        file: wonderlab/wonderlab.csproj

    - name: Create Release
      if: github.event_name != 'pull_request' 
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        automatic_release_tag: ${{ steps.package_version.outputs.version }}
        title: "${{ steps.package_version.outputs.version }} Update"
        files: |
            /home/runner/work/MinecraftArchive_Launcher/MinecraftArchive_Launcher/*.zip
            /home/runner/work/MinecraftArchive_Launcher/MinecraftArchive_Launcher/*.AppImage

  Delete_Artifacts:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [Release]
    steps:
    - name: Delete Windows Artifact
      uses: geekyeggo/delete-artifact@v2
      with:
          name: Windows

    - name: Delete AppImage Artifact
      uses: geekyeggo/delete-artifact@v2
      with:
          name: AppImage
